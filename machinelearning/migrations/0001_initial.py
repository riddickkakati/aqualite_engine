# Generated by Django 5.1.4 on 2025-01-10 12:50

import django.core.validators
import django.db.models.deletion
import machinelearning.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MLGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=32)),
                ("location", models.CharField(max_length=32)),
                ("description", models.CharField(max_length=256)),
                ("time", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "unique_together": {("name", "location")},
            },
        ),
        migrations.CreateModel(
            name="MLComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.CharField(max_length=256)),
                ("time", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="machine_learning_user_comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="machine_learning_comments",
                        to="machinelearning.mlgroup",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MLRun",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timeseries_file",
                    models.FileField(
                        upload_to=machinelearning.models.timeseries_upload_path_handler,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["txt"]
                            )
                        ],
                    ),
                ),
                (
                    "validation_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=machinelearning.models.user_validation_path_handler,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["txt"]
                            )
                        ],
                    ),
                ),
                ("interpolate", models.BooleanField(default=True)),
                (
                    "n_data_interpolate",
                    models.IntegerField(blank=True, default=7, null=True),
                ),
                (
                    "validation_required",
                    models.CharField(
                        choices=[
                            ("F", "False"),
                            ("R", "Random_Percentage"),
                            ("U", "Uniform_Percentage"),
                            ("N", "Uniform_Number"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "percent",
                    models.IntegerField(
                        default=10,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(50),
                        ],
                    ),
                ),
                (
                    "model",
                    models.CharField(
                        choices=[("W", "Air2water"), ("S", "Air2stream")], max_length=1
                    ),
                ),
                ("status", models.CharField(default="pending", max_length=20)),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("email_send", models.BooleanField(default=False)),
                ("email_list", models.CharField(blank=True, max_length=50)),
                (
                    "results_path",
                    models.TextField(
                        blank=True, help_text="Stores the zip file", null=True
                    ),
                ),
                (
                    "analysis_summary",
                    models.JSONField(
                        blank=True,
                        help_text="Stores the complete analysis results",
                        null=True,
                    ),
                ),
                (
                    "yaml_results_path",
                    models.CharField(
                        blank=True,
                        help_text="Path to the YAML results file",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("error_message", models.TextField(blank=True, null=True)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="machine_learning_group",
                        to="machinelearning.mlgroup",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="machine_learning_runs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MLMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("admin", models.BooleanField(default=False)),
                ("time", models.DateTimeField(auto_now_add=True)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="machine_learning_members",
                        to="machinelearning.mlgroup",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="machine_learning_members_of",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "group")},
            },
        ),
    ]
